file(GLOB_RECURSE _PS_SRC_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.cc")

set(SERVER_FLATBUFFER_OUTPUT "${CMAKE_BINARY_DIR}/schema")
set(FBS_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/../../schema/cipher.fbs
        ${CMAKE_CURRENT_SOURCE_DIR}/../../schema/fl_job.fbs
        )
ms_build_flatbuffers(FBS_FILES ${CMAKE_CURRENT_SOURCE_DIR}../../schema generated_fbs_files ${SERVER_FLATBUFFER_OUTPUT})

if(NOT ENABLE_CPU OR WIN32)
    list(REMOVE_ITEM _PS_SRC_FILES "optimizer_info_builder.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "optimizer_info.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "scheduler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "util.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "embedding_table_shard_metadata.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_message_handler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_server.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/comm_util.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/tcp_client.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/tcp_message_handler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/tcp_server.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/node.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/node_manager.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "ps_cache/ps_cache_manager.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/worker_node.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/server_node.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/abstract_node.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/scheduler_node.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_client.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "worker.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "parameter_server.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_request_handler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/ssl_wrapper.cc")
endif()

if(NOT ENABLE_D)
    list(REMOVE_ITEM _PS_SRC_FILES "ps_cache/ascend/ascend_ps_cache.cc")
endif()

if(NOT ENABLE_GPU)
    list(REMOVE_ITEM _PS_SRC_FILES "ps_cache/gpu/gpu_ps_cache.cc")
endif()

if(NOT ENABLE_CPU OR WIN32)
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/communicator_base.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_communicator.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/tcp_communicator.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/http_msg_handler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "core/communicator/tcp_msg_handler.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/apply_momentum_kernel.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/aggregation_kernel_factory.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/dense_grad_accum_kernel.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/optimizer_kernel_factory.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/round/round_kernel_factory.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/round/round_kernel.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/round/start_fl_job_kernel.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/kernel/params_info.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/consistent_hash_ring.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/iteration_timer.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/local_meta_store.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/memory_register.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/parameter_aggregator.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/executor.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/collective_ops_impl.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/distributed_count_service.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/distributed_metadata_store.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/iteration.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/model_store.cc")
    list(REMOVE_ITEM _PS_SRC_FILES "server/round.cc")
endif()

list(REMOVE_ITEM _PS_SRC_FILES "ps_cache/ps_data/ps_data_prefetch.cc")
list(REMOVE_ITEM _PS_SRC_FILES "ps_cache/ps_data/ps_data_channel.cc")
add_subdirectory(ps_cache)

set_property(SOURCE ${_PS_SRC_FILES} PROPERTY COMPILE_DEFINITIONS SUBMODULE_ID=mindspore::SubModuleId::SM_PS)
add_library(_mindspore_ps_obj OBJECT ${_PS_SRC_FILES})
add_dependencies(_mindspore_ps_obj generated_fbs_files)
target_link_libraries(_mindspore_ps_obj mindspore::flatbuffers)
